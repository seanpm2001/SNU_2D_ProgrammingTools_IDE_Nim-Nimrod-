name: Nim Release
on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    types:
      - labeled

jobs:
  release:
    if: github.event.action != 'labeled'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Bump version on merging Pull Requests with specific labels.
      # (bump:major,bump:minor,bump:patch)
      - id: bumpr
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: haya14busa/action-bumpr@v1

      # Update corresponding major and minor tag.
      # e.g. Update v1 and v1.2 when releasing v1.2.3
      - uses: haya14busa/action-update-semver@v1
        if: "!steps.bumpr.outputs.skip"
        with:
          tag: ${{ steps.bumpr.outputs.next_version }}

      # Get tag name.
      - id: tag
        uses: haya14busa/action-cond@v1
        with:
          cond: "${{ startsWith(github.ref, 'refs/tags/') }}"
          if_true: ${{ github.ref }}
          if_false: ${{ steps.bumpr.outputs.next_version }}

      # Create release.
      - uses: actions/create-release@v1
        if: "steps.tag.outputs.value != ''"
        env:
          # This token is provided by Actions, you do not need to create your own token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.value }}
          release_name: ${{ steps.tag.outputs.value }}
          body: ${{ steps.bumpr.outputs.message }}
          draft: false
          prerelease: false

  release-check:
    if: github.event.action == 'labeled'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Post bumpr status comment
        uses: haya14busa/action-bumpr@v1

name: Nim schedule

on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        version:
          - 1.0.0
          - stable
          - devel
        exclude:
          - os: macOS-latest
            version: devel
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          nim-version: ${{ matrix.version }}

      - name: Print Nim version
        run: nim -v
      - name: Print Nimble version
        run: nimble -v
      - name: Run build test
        run: nimble install -Y nimjson
      - name: Run command
        run: nimjson -h

  test_v1:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v2.1.7
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble
      - uses: jiro4989/setup-nim-action@v1

      - name: Print Nim version
        run: nim -v
      - name: Print Nimble version
        run: nimble -v
      - name: Run build test
        run: nimble install -Y nimjson
      - name: Run command
        run: nimjson -h

name: Nim build

on:
  push:
    paths-ignore:
      - 'LICENSE'
      - '*.md'
    branches:
      - master
  pull_request:
    paths-ignore:
      - 'LICENSE'
      - '*.md'

jobs:
  test-typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Run test
        run: npm test

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        version:
          - 1.0.0
          - stable
          - devel
        exclude:
          - os: macOS-latest
            version: devel
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          nim-version: ${{ matrix.version }}

      - name: Print Nim version
        run: nim -v
      - name: Print Nimble version
        run: nimble -v
      - name: Run build test
        run: nimble install -Y nimjson
      - name: Run command
        run: nimjson -h

  test-glob-version:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - 1.2.x
          - 1.x
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          nim-version: ${{ matrix.version }}

      - name: Print Nim version
        run: nim -v
      - name: Print Nimble version
        run: nimble -v
      - name: Run build test
        run: nimble install -Y nimjson
      - name: Run command
        run: nimjson -h

name: Nim test_versioning

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

jobs:
  test_vX:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type:
          - default
          - no-color
          - 'yes'
          - all
    steps:
      - uses: actions/checkout@v2
      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v2.1.7
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble

      - uses: jiro4989/setup-nim-action@v1
        if: matrix.type == 'default'
      - uses: ./
        with:
          no-color: true
        if: matrix.type == 'no-color'
      - uses: ./
        with:
          yes: true
        if: matrix.type == 'yes'
      - uses: ./
        with:
          no-color: true
          yes: true
        if: matrix.type == 'all'

      - name: Print Nim version
        run: nim -v
      - name: Print Nimble version
        run: nimble -v
      - name: Run build test
        run: nimble install -Y nimjson
      - name: Run command
        run: nimjson -h
